// this file is generated by servgen util based on a template at 2021-06-26 10:37:24 +0300 MSK
package errors

import (
	"context"
)

var (
	ErrTimesheetIdIsEmpty = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetIdEmpty, "empty id").C(ctx).Err()
	}
	ErrTimesheetOwnerIsEmpty = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetOwnerEmpty, "Owner can not be empty").C(ctx).Err()
	}
	ErrTimesheetIdHasNoRights = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetNoRightId, "Id has not rights").C(ctx).Err()
	}
	ErrTimesheetAccessVerification = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetAccessVerification, "Id has not rights").C(ctx).Err()
	}
	ErrTimesheetTimesheetIdIsEmpty = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetTimesheetIdEmpty, "empty calendar id").C(ctx).Err()
	}
	ErrTimesheetSubjectIsEmpty = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetSubjectEmpty, "subject can not be empty").C(ctx).Err()
	}
	ErrTimesheetTimeIsEmpty = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetTimeEmpty, "time can not be empty").C(ctx).Err()
	}
	ErrTimesheetWeekDayIsEmpty = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetWeekDayEmpty, "Date can not be empty").C(ctx).Err()
	}
	ErrTimesheetIsEmpty = func(ctx context.Context) error {
		return er.WithBuilder(pb.ErrCodeTimesheetNotFound, "timesheet is empty").C(ctx).Err()
	}
	ErrTimesheetNotFound = func(ctx context.Context, id string) error {
		return er.WithBuilder(pb.ErrCodeTimesheetNotFound, "not found").F(er.FF{"id": id}).C(ctx).Err()
	}
	ErrTimesheetDeleted = func(ctx context.Context, id string) error {
		return er.WithBuilder(pb.ErrCodeTimesheetDeleted, "already deleted").F(er.FF{"id": id}).C(ctx).Err()
	}
	ErrTimesheetStorageCreate = func(cause error, ctx context.Context) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetStorageCreate, "").C(ctx).Err()
	}
	ErrTimesheetStorageGetDb = func(cause error, ctx context.Context, id string) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetStorageGetDb, "").F(er.FF{"id": id}).C(ctx).Err()
	}
	ErrTimesheetStorageGetCache = func(cause error, ctx context.Context, id string) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetStorageGetCache, "").F(er.FF{"id": id}).C(ctx).Err()
	}
	ErrTimesheetStorageSetCache = func(cause error, ctx context.Context, id string) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetStorageSetCache, "").F(er.FF{"id": id}).C(ctx).Err()
	}
	ErrTimesheetStorageUpdate = func(cause error, ctx context.Context, id string) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetStorageUpdate, "").F(er.FF{"id": id}).C(ctx).Err()
	}
	ErrTimesheetStorageDelete = func(cause error, ctx context.Context, id string) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetStorageDelete, "").F(er.FF{"id": id}).C(ctx).Err()
	}
	ErrTimesheetStorageSearch = func(cause error, ctx context.Context, id string) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetStorageSearchDb, "").F(er.FF{"id": id}).C(ctx).Err()
	}
	ErrTimesheetStorageGetIds = func(cause error, ctx context.Context) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetStorageGetIds, "").C(ctx).Err()
	}
	ErrTimesheetIndexSearch = func(cause error, ctx context.Context) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetIndexSearch, "").C(ctx).Err()
	}
	ErrTimesheetAccessingToDb = func(cause error, ctx context.Context) error {
		return er.WrapWithBuilder(cause, pb.ErrCodeTimesheetIdEmpty, "").C(ctx).Err()
	}
)
